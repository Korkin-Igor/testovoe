services:
  app:
    build:
      context: ../
      dockerfile: deploy/Dockerfile
    container_name: app
    user: "1000:1000"
    depends_on:
      - mysql
    volumes:
      - ../app:/var/www
    working_dir: /var/www
    restart: unless-stopped
    networks:
      - app-network
    env_file:
      - .env

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ../app:/var/www
    depends_on:
      - app
      - mysql
    restart: unless-stopped
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    env_file:
      - .env

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: ${PMA_ARBITRARY}
    ports:
      - "8080:80"
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: